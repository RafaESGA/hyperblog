Comandos Git

git init:
Iniciar un repositorio local.

git status: 
Para saber si tenemos un archivo añadido o borrado en nuestro proyecto, para saber en la rama en la que estamos y si tenemos commits.

git add:
Para trackear los archivos que se van a guardar en el repositorio.

git rm:
Para borrar un archivo que hayamos añadido, para eliminarlo por completo de nuestra rama usamosgit rm --cached.

git commit: 
Para añadir un commit a nuestra rama, también podemos ponerle un -m seguidamente ponemos entre comillas nuestro ensaje.

git commit -am para no hacer add

git config: 
Muestra configuraciones de git también podemos usar –list para mostrar la configuración por defecto de nuestro git y si añadimos --show-origin inhales nos muestra las configuraciones guardadas y su ubicación.

git config --global user.name: 
Cambia de manera global el nombre del usuario, seguidamente ponemos entre comillas nuestro nombre.

git config --global user.email:
Cambia de manera global el email del usuario, seguidamente ponemos entre comillas nuestro nombre.

git log: 
Para ver la historia de nuestros archivos, los commits, el usuario que lo cambió, cuando se realizaron los cambios etc. seguidamente ponemos el nombre de nuestro archivo.

ramas
git branch "nombre de la rama"
git branch -l para ver todas las ramas
git checkout "nombre de la rama" para moverse entre ramas

github
Primero: Guardar la URL del repositorio de GitHub con el nombre de origin
git remote add origin URL

Segundo: Verificar que la URL se haya guardado correctamente:
git remote
git remote -v

Tercero: Traer la versión del repositorio remoto y hacer merge para crear un commit con los archivos de ambas partes. Podemos usar git fetch y git merge o solo el git pull con el flag --allow-unrelated-histories:
git pull origin master --allow-unrelated-histories 

Por último, ahora sí podemos hacer git push para guardar
los cambios de nuestro repositorio local en GitHub:
git push origin master